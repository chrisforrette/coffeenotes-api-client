version: 2

jobs:
  test:
    docker: 
      - image: node:10
    working_directory: ~/app
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM cache
          keys:
            - npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-v1-{{ .Branch }}-
      - run: npm install
      - run: npm run lint
      # Un-comment when tests are added
      # - run: npm test -- --coverage
      - save_cache:
          name: Save NPM cache
          key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  publish:
    docker: 
      - image: node:10
    working_directory: ~/app
    environment:
      - NODE_ENV: production
    steps:
      - checkout
      - restore_cache:
          name: Restore NPM cache
          keys:
            - npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-v1-{{ .Branch }}-
      # Use NPM_TOKEN env var to auth with NPM
      - run: echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
      - run: npm install
      - run: npm publish --access public
      - save_cache:
          name: Save NPM cache
          key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

workflows:
  version: 2
  run:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - publish:
          requires:
            - test
          filters:
            # Only run this on semver-ish tags, not other branches
            branches:
              ignore: /.*/
            tags:
              # Holy semver regex
              # https://circleci.com/blog/publishing-to-github-releases-via-circleci/
              only: /(?<=^[Vv]|^)(?:(?<major>(?:0|[1-9](?:(?:0|[1-9])+)*))[.](?<minor>(?:0|[1-9](?:(?:0|[1-9])+)*))[.](?<patch>(?:0|[1-9](?:(?:0|[1-9])+)*))(?:-(?<prerelease>(?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:0|[1-9](?:(?:0|[1-9])+)*))(?:[.](?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:0|[1-9](?:(?:0|[1-9])+)*)))*))?(?:[+](?<build>(?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:(?:0|[1-9])+))(?:[.](?:(?:(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?|(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)(?:[A-Za-z]|-)(?:(?:(?:0|[1-9])|(?:[A-Za-z]|-))+)?)|(?:(?:0|[1-9])+)))*))?)$/
